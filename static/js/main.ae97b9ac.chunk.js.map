{"version":3,"sources":["styles/GlobalStyle.js","components/ErrorLoadingData.jsx","hocs/withLocations.jsx","components/MarkersIndicator/styles.js","components/MarkersIndicator/index.jsx","components/Map/styles.js","containers/Map.js","components/Map/index.jsx","hooks/useLocationsData.jsx","pages/Home.jsx","RouterManager.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","ErrorLoadingData","error","loading","DataRender","ErrorRender","LoadingRender","message","propTypes","PropTypes","shape","string","isRequired","bool","func","defaultProps","Button","styled","button","IconButton","Panel","div","Header","header","Title","h1","MarkersToggleButton","MarkersList","ul","OptionsWrapper","Name","h4","Marker","li","Option","MarkersIndicator","markers","showMarkers","setShowMarkersHandler","setCenterHandler","setZoomHandler","type","title","onClick","map","position","Component","MapWrapper","Map","data","center","zoom","useState","googleMarkers","setGoogleMarkers","setShowMarkers","mapElement","useRef","useEffect","script","document","createElement","src","process","defer","async","head","appendChild","window","initMap","current","google","maps","forEach","newGoogleMarkersArray","googleMarker","setMap","push","newShowMarkers","newPosition","setCenter","newZoom","setZoom","ref","testData","locationsData","setLocationsData","useLocationsData","Home","RouterManager","basepath","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae97b9ac.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html,\n  body,\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  #root {\n    --backgroundColor: #fff;\n    --color: rgba(0, 0, 0, 0.87);\n    --highlightColor: #1a73e8;\n    --borderColor: #dadce0;\n    --borderRadius: 4px;\n  }\n\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',\n      'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DefaultErrorComponent = (error) => (\n  <>\n    <h1>Error:</h1>\n    <p>{error}</p>\n  </>\n);\n\nconst DefaultLoadingComponent = () => (\n  <>\n    <h1>...Loading...</h1>\n  </>\n);\n\nconst ErrorLoadingData = ({\n  error,\n  loading,\n  DataRender,\n  ErrorRender,\n  LoadingRender,\n}) => {\n  return (\n    <>\n      {error ? (\n        <>{ErrorRender(error.message)}</>\n      ) : loading ? (\n        <>{LoadingRender()}</>\n      ) : (\n        <>{DataRender()}</>\n      )}\n    </>\n  );\n};\n\nErrorLoadingData.propTypes = {\n  error: PropTypes.shape({ message: PropTypes.string.isRequired }).isRequired,\n  loading: PropTypes.bool.isRequired,\n  DataRender: PropTypes.func.isRequired,\n  ErrorRender: PropTypes.func,\n  LoadingRender: PropTypes.func,\n};\n\nErrorLoadingData.defaultProps = {\n  ErrorRender: DefaultErrorComponent,\n  LoadingRender: DefaultLoadingComponent,\n};\n\nexport { ErrorLoadingData };\n","import React from 'react';\nimport { useLocationsData } from '../hooks/useLocationsData';\nimport { ErrorLoadingData } from '../components/ErrorLoadingData';\n\nexport const withLocations = (Component) => () => {\n  const [data, loading, error] = useLocationsData();\n  return (\n    <ErrorLoadingData\n      loading={loading}\n      error={error}\n      DataRender={() => <Component data={data} />}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  cursor: pointer;\n  transition: ease-in-out 300ms;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  color: var(--highlightColor);\n  border: 1px solid #dadce0;\n  border-radius: 2px;\n  padding: 0.1rem 0.2rem;\n  margin: 0.1rem 0.2rem;\n`;\n\nexport const IconButton = styled(Button)`\n  color: rgb(170, 170, 170);\n  &:hover {\n    color: rgba(0, 0, 0, 0.87);\n    border-color: rgba(0, 0, 0, 0.87);\n  }\n`;\n\nexport const Panel = styled.div`\n  --padding: 1rem;\n  position: absolute;\n  padding: var(--padding) 0;\n  height: calc(100% - 2px - var(--padding) * 2);\n  width: 200px;\n  background-color: var(--backgroundColor);\n  border: 1px solid #dadce0;\n  border-radius: 0 var(--borderRadius) var(--borderRadius) 0;\n  z-index: 1;\n  overflow: auto;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #333;\n`;\n\nexport const Title = styled.h1`\n  color: var(--color);\n`;\n\nexport const MarkersToggleButton = styled(IconButton)`\n  svg {\n    --size: 2rem;\n    height: var(--size);\n    width: var(--size);\n  }\n`;\n\nexport const MarkersList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  li:not(:last-child) {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport const OptionsWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Name = styled.h4``;\n\nexport const Marker = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.25rem;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const Option = styled(IconButton)`\n  svg {\n    --size: 1.5rem;\n    height: var(--size);\n    width: var(--size);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MdLocationOn, MdLocationOff } from 'react-icons/md';\nimport { BsCaretRightFill } from 'react-icons/bs';\nimport {\n  Panel,\n  Header,\n  Title,\n  MarkersToggleButton,\n  MarkersList,\n  OptionsWrapper,\n  Name,\n  Marker,\n  Option,\n} from './styles';\n\nconst MarkersIndicator = ({\n  markers,\n  showMarkers,\n  setShowMarkersHandler,\n  setCenterHandler,\n  setZoomHandler,\n}) => (\n  <Panel>\n    <Header>\n      <Title>Markers</Title>\n      <MarkersToggleButton\n        type=\"button\"\n        title={`${showMarkers ? 'Hide' : 'Show'} All`}\n        onClick={() => setShowMarkersHandler(!showMarkers)}\n      >\n        {showMarkers ? <MdLocationOff /> : <MdLocationOn />}\n      </MarkersToggleButton>\n    </Header>\n    <MarkersList>\n      {markers.map(({ title, position }) => (\n        <Marker>\n          <Name>{title}</Name>\n          <OptionsWrapper>\n            <Option\n              type=\"button\"\n              title=\"Go\"\n              onClick={() => {\n                setCenterHandler(position);\n                setZoomHandler(10);\n              }}\n            >\n              <BsCaretRightFill />\n            </Option>\n          </OptionsWrapper>\n        </Marker>\n      ))}\n    </MarkersList>\n  </Panel>\n);\n\nMarkersIndicator.propTypes = {\n  markers: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      position: PropTypes.shape({\n        lat: PropTypes.number.isRequired,\n        lng: PropTypes.number.isRequired,\n      }).isRequired,\n      title: PropTypes.string.isRequired,\n      visible: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  showMarkers: PropTypes.bool.isRequired,\n  setShowMarkersHandler: PropTypes.func.isRequired,\n  setCenterHandler: PropTypes.func.isRequired,\n  setZoomHandler: PropTypes.func.isRequired,\n};\n\nexport { MarkersIndicator };\n","import styled from 'styled-components';\n\nexport const MapWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Map = styled.div`\n  height: 100vh;\n  width: 100vw;\n`;\n","/* eslint-disable import/extensions */\nimport { withLocations } from '../hocs/withLocations.jsx';\nimport { MapComponent } from '../components/Map/index.jsx';\n\nexport const Map = withLocations(MapComponent);\n","/* global google */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { MarkersIndicator } from '../MarkersIndicator/index';\nimport { MapWrapper, Map } from './styles';\n\nconst MapComponent = ({ data: { center, zoom, markers } }) => {\n  const [googleMarkers, setGoogleMarkers] = useState([]);\n  const [showMarkers, setShowMarkers] = useState(true);\n  const mapElement = useRef(true);\n  const map = useRef(true);\n\n  useEffect(() => {\n    // Create the script tag, set the appropriate attributes\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_MAPS_APIKEY}&callback=initMap`;\n    script.defer = true;\n    script.async = true;\n\n    // Attach your callback function to the `window` object\n\n    // Append the 'script' element to 'head'\n    document.head.appendChild(script);\n\n    window.initMap = () => {\n      map.current = new google.maps.Map(mapElement.current, {\n        center,\n        zoom,\n      });\n\n      markers.forEach(({ position, title }) => {\n        const newGoogleMarkersArray = googleMarkers;\n        const googleMarker = new google.maps.Marker({ position, title });\n        if (showMarkers) {\n          googleMarker.setMap(map.current);\n        }\n        newGoogleMarkersArray.push(googleMarker);\n        setGoogleMarkers(newGoogleMarkersArray);\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    googleMarkers.forEach((googleMarker) => {\n      googleMarker.setMap(showMarkers ? map.current : null);\n    });\n  }, [showMarkers]);\n\n  return (\n    <MapWrapper>\n      <MarkersIndicator\n        markers={markers}\n        showMarkers={showMarkers}\n        setShowMarkersHandler={(newShowMarkers) => {\n          setShowMarkers(newShowMarkers);\n        }}\n        setCenterHandler={(newPosition) => map.current.setCenter(newPosition)}\n        setZoomHandler={(newZoom) => map.current.setZoom(newZoom)}\n      />\n      <Map ref={mapElement} />\n    </MapWrapper>\n  );\n};\n\nMapComponent.propTypes = {\n  data: PropTypes.shape({\n    center: PropTypes.shape({\n      lat: PropTypes.number.isRequired,\n      lng: PropTypes.number.isRequired,\n    }).isRequired,\n    zoom: PropTypes.number.isRequired,\n    markers: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        position: PropTypes.shape({\n          lat: PropTypes.number.isRequired,\n          lng: PropTypes.number.isRequired,\n        }).isRequired,\n        title: PropTypes.string.isRequired,\n        visible: PropTypes.bool.isRequired,\n      }),\n    ).isRequired,\n  }).isRequired,\n};\n\nexport { MapComponent };\n","/* eslint-disable no-unused-vars */\nimport { useState } from 'react';\nimport testData from '../testData.json';\n\nexport const useLocationsData = () => {\n  const [locationsData, setLocationsData] = useState(testData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  return [locationsData, loading, error, setLocationsData];\n};\n","import React from 'react';\nimport { Map } from '../containers/Map';\n\nexport const Home = () => <Map />;\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { Home } from './pages/Home';\n\nexport const RouterManager = () => (\n  <>\n    <GlobalStyle />\n    <Router basepath=\"/maps-demo/\">\n      <Home path=\"/\" />\n    </Router>\n  </>\n);\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RouterManager } from './RouterManager';\n\nReactDOM.render(<RouterManager />, document.getElementById('root'));\n"],"sourceRoot":""}